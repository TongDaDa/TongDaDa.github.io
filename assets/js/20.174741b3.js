(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{377:function(t,a,s){t.exports=s.p+"assets/img/introductionOfType.12671b72.png"},541:function(t,a,s){"use strict";s.r(a);var e=s(4),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h3",{attrs:{id:"第一篇文章"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#第一篇文章"}},[t._v("#")]),t._v(" 第一篇文章")]),t._v(" "),e("blockquote",[e("p",[t._v("从开始学前端直至现在已有一年的时间了，期间遇见了很多事情，也经历了各式各样的技术问题，为了让自己摆脱这些这些问题，最后养成了看书的习惯。因为每次看完总觉得自己内功又增了，哪怕只是一点。可惜的是每次看完都会忘掉一些，尤其是没有自己的实践和知识点太多时总会遗忘一些，但我不希望这种事情发生，\n可能只是因为这一点，以后就会找几天的bug，这是每个程序员都不敢预想的场景。最后我决定把我每天对知识的累积，用我理解的角度去记录下来。笔记和文章唯一的不同前者是私有，后者是公开的，希望通过我对它理解可以帮助他人，也请大家能指出文章中的问题，感激不尽。")])]),t._v(" "),e("ol",[e("li",[e("h2",{attrs:{id:"类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#类型"}},[t._v("#")]),t._v(" 类型")])])]),t._v(" "),e("p",[t._v("ECMAScript语言中所有的值都对应一个类型。语言类型包括：Undefined，Null，Boolean，String，Number，Object。对于语言引擎和开发人员来说，类型是值的内部特征，它定义了值的行为，是所有编程语言的共有的概念，并使其区别于其他值。\n抛开学术界对类型定义的分歧，为什么说JavaScript是否有类型也很重要呢？让我们来详细介绍一下，关于JavaScript类型这部分的知识。")]),t._v(" "),e("h3",{attrs:{id:"内置类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#内置类型"}},[t._v("#")]),t._v(" 内置类型")]),t._v(" "),e("blockquote",[e("p",[t._v("首先JavaScript有七种内置类型:")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("空值(Null)")])]),t._v(" "),e("li",[e("code",[t._v("未赋值(Undefined)")])]),t._v(" "),e("li",[e("code",[t._v("字符串(String)")])]),t._v(" "),e("li",[e("code",[t._v("数字(Number)")])]),t._v(" "),e("li",[e("code",[t._v("对象(Object)")])]),t._v(" "),e("li",[e("code",[t._v("布尔值(Boolean)")])]),t._v(" "),e("li",[e("code",[t._v("符号(Symbol ES6中新增)")])])]),t._v(" "),e("p",[t._v("注: 除对象以外其他统称为"),e("code",[t._v("基本类型")]),t._v(".")]),t._v(" "),e("p",[t._v("下面我们用typeof查看这七种类型值，但是结果却和它们的类型名称不尽相同。")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("community"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sf"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "Object"')]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("        "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "undefined"')]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v("               "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "number"')]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"javascript"')]),t._v("     "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "string"')]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("             "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "boolean"')]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" Symbol           "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "symbol"')]),t._v("\n")])])]),e("p",[t._v("上面的这六种类型都和我typeof出来的字符串互相对应。")]),t._v(" "),e("p",[t._v("咦? null 哪去了？现在我门来单独看案它的类型.")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"object"')]),t._v("     "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n")])])]),e("p",[t._v('你可能会看到null并不是"null"，这是JavaScript一个历史悠久的bug，但是由于web系统对其的依赖，很难修复，这个bug也许会一直存在雨javascript中。我们需要铭记在心，避免以后程序出现问题。我们再用复合条件来检测一下null值的类型：')]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("     "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("a "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" a "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"object"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),e("p",[t._v("由此我们知道，null隐式强制类型转换成了反值为true(说明null的布尔值为false)，并对它的类型做出全等比较，最后返回true。")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "function"')]),t._v("\n")])])]),e("p",[t._v("这样看来，function也是JavaScript的一个内置类型吧？可以去查阅一下[ECMAScript规范][1]，它其实是"),e("code",[t._v("Object")]),t._v("类型中的"),e("code",[t._v("子类型")]),t._v("，也就是说它属于Object类型范畴之内，具体来说，函数是"),e("code",[t._v("可调用对象")]),t._v("，它有一个内部属性[[call]]使其可以被调用。\n那么它有什么对象的特征呢？让我们来在控制台中打印出来看一下.")]),t._v(" "),e("p",[e("img",{attrs:{src:s(377),alt:"描述"}})]),t._v(" "),e("p",[t._v("可以看到，函数当中有一些可读取属性，就比如 .length属性，代表的是其声明的参数个数，")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("fun")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nfun"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2")]),t._v("\n")])])]),e("p",[t._v("查看了function，让我们再来查看一下Array类型.")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"object"')]),t._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//true")]),t._v("\n")])])]),e("p",[t._v("它们都同属于"),e("code",[t._v("Object子类型")]),t._v("， 数组的元素按数字顺序来进行索引(非字符串那样通过字符串键值)，其"),e("code",[t._v("length")]),t._v("属性是其数组元素个数。")]),t._v(" "),e("hr"),t._v(" "),e("h3",{attrs:{id:"值和类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#值和类型"}},[t._v("#")]),t._v(" 值和类型")]),t._v(" "),e("p",[t._v("JavaScript中的类型是"),e("code",[t._v("相对于他的值")]),t._v("来定义的，也就是说衡量类型的永远都是值本身，与变量无关，变量只是储存值的一个容器，在这个容器中有"),e("code",[t._v("不确定的值类型")])]),t._v(" "),e("p",[t._v("JavaScript 不做"),e("code",[t._v("类型强制")]),t._v("，也就是说，语言引擎不要求变量总是与"),e("code",[t._v("初始化值同类型")]),t._v("的值。")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("   "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" a    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "number"')]),t._v("\n\n   a "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n   "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" a    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//"boolean"')]),t._v("\n")])])]),e("p",[t._v("typeof 总会返回一个字符串")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("     "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//string  ")]),t._v("\n")])])]),e("p",[t._v('typeof 10 返回为 "number"  之后再次使用typeof "number"  结果为 '),e("code",[t._v("”string“")])]),t._v(" "),e("hr"),t._v(" "),e("h3",{attrs:{id:"undeclared与undefined"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#undeclared与undefined"}},[t._v("#")]),t._v(" Undeclared与Undefined")]),t._v(" "),e("p",[t._v("我们都知道undefined代表"),e("code",[t._v("未被复制")]),t._v("，它也是我们七大类型中的一种，如下:")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("     "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" a      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//"undefined"')]),t._v("\n     \n     "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" c"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     \n     b "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" c"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n     "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" b      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "undefined"')]),t._v("\n     "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" c      "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "undefined"')]),t._v("\n")])])]),e("p",[t._v("可能有些朋友对Undeclared有些陌生，让我们来看一下它与Undefined的定义:\n"),e("code",[t._v("在作用域中未被声明过")]),t._v("的变量为 Undeclared。\n作用域中声明了且未被赋值的为"),e("code",[t._v("Undefined")]),t._v("。")]),t._v(" "),e("p",[t._v("遗憾的是我们在js环境下测试时，两种情况却并没有出现Undeclared，这是为什么呢？")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("   "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n       \n   a"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//undefined")]),t._v("\n   b"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//ReferenceError : b is not defined")]),t._v("\n")])])]),e("p",[t._v('"b is not defined " 容易让人误解为与undefined的性质一样，其它们两个是'),e("code",[t._v("两码事")]),t._v("此时浏览器如果报成 "),e("code",[t._v("b is not found")]),t._v(" 或者 "),e("code",[t._v("b is not declared")]),t._v("会更加准确。")]),t._v(" "),e("p",[t._v("虽然JS当中没有Undeclared的"),e("code",[t._v("显式概念")]),t._v(",但是我们要知道它是存在的，Undefined 与 Undeclared 是完全两种不同的"),e("code",[t._v("场景")]),t._v(";")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v("  a "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//undefined")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v("  b "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//undefined")]),t._v("\n")])])]),e("p",[t._v("对于Undeclared照样返回了undefined。这里b虽然是一个Undeclared变量，但typeof b 它并没有报错，这是因为typeof有一套安全防范机制。")]),t._v(" "),e("hr"),t._v(" "),e("h3",{attrs:{id:"typeof-undeclared"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#typeof-undeclared"}},[t._v("#")]),t._v(" typeof Undeclared")]),t._v(" "),e("p",[t._v("该安全机制在浏览器运行时的JavaScript代码来说是很有帮助的，因为多个脚本文件会在共享的全局命名空间中加载变量。")]),t._v(" "),e("p",[t._v("举个例子 ，如果我们在布尔环境下为一个值做非空判断。")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("   "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DETELE")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ReferenceError: detele is not defined")]),t._v("\n")])])]),e("p",[t._v("抛出了错误，上面已经解释过，此处不再强调它的准确意义。为了避免程序出现这种促五，我们可以使用 typeof 来对它进行改造。")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DETELE")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"undefined"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("同样属于非空条件判断，后者的优势，我想大家已经看到了，不论何时它都不会报错，只是淡出的"),e("code",[t._v("返回布尔值")]),t._v("。")]),t._v(" "),e("p",[t._v("可以看到 typeof 的安全防范机制为我们提供了非常便捷的方式，还有一种方式如下:")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[t._v("   "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("window"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DETELE")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("p",[t._v("如果这个变量存在于全局中，我们可以利用它，全局变量中默认为全局属性的特性，来通过查找对象属性的方式去查看它，当然这只是在全局条件下，当非全局条件下，我们可以继续使用typeof去判断。")])])}),[],!1,null,null,null);a.default=n.exports}}]);