(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{369:function(t,s,a){t.exports=a.p+"assets/img/internalPropertyOfScreen.08791107.jpeg"},370:function(t,s,a){t.exports=a.p+"assets/img/internalPropertyOfScreen2.c91bbbdb.jpeg"},371:function(t,s,a){t.exports=a.p+"assets/img/internalPropertyOfScreen3.4043c224.jpeg"},372:function(t,s,a){t.exports=a.p+"assets/img/internalPropertyOfScreen4.b61ae9f4.jpeg"},373:function(t,s,a){t.exports=a.p+"assets/img/internalPropertyOfScreen5.9e641574.jpeg"},374:function(t,s,a){t.exports=a.p+"assets/img/internalPropertyOfScreen6.58fc8dec.jpeg"},375:function(t,s,a){t.exports=a.p+"assets/img/internalPropertyOfScreen7.a104fc07.jpeg"},508:function(t,s,a){"use strict";a.r(s);var n=a(4),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("blockquote",[n("p",[t._v("内部属性在我们了解对象原型及环境变量时都有遇到过，可是毕竟看不到摸不着，很难更加深入的了解它的工作流程和作用,最近在chrome当中查看对象结构时，看到了释放出来的一些内部属性，这些以前大概都是概念，那么既然能看到，就让我们来探索一下吧~")])]),t._v(" "),n("br"),t._v(" "),n("h2",{attrs:{id:"scopes"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#scopes"}},[t._v("#")]),t._v(" [[Scopes]]")]),t._v(" "),n("p",[t._v("此属性储存在函数对象中，我记得从chrome 62开始我就发现这个属性了，具体哪个版本大家可以google,现在我们把它给打印出来看一下.")]),t._v(" "),n("p",[n("img",{attrs:{src:a(369),alt:"clipboard.png"}})]),t._v(" "),n("p",[n("img",{attrs:{src:a(370),alt:"clipboard.png"}})]),t._v(" "),n("p",[t._v("这是一个不访问外部变量的函数，所以Scopes中只储存了Global全局对象。")]),t._v(" "),n("p",[t._v("还记得作用域链吗(如果不记得，请点击"),n("a",{attrs:{href:"https://segmentfault.com/a/1190000009886713"}},[t._v("这里")]),t._v("看前半部分)？\n从前往后分别是 [函数自己的变量对象，.., .., Global] 类似于这样依次向后(上)查找这个执行环境所"),n("code",[t._v("使用到")]),t._v("的变量对象。")]),t._v(" "),n("p",[t._v("在上面的文章说过，javascript在开始执行时，会经过两个阶段，预编译->代码执行，在v8中代码执行阶段运行的是"),n("code",[t._v("机器码")]),t._v("，CPU可以直接接收，\n可以说，在javascript代码执行前都会经过复杂的代码分割，生成抽象语法树(AST)，编译解析与优化等操作，[[Scopes]]正是这其中的产物。下面说\n下它形成的流程。")]),t._v(" "),n("ol",[n("li",[n("p",[t._v("词法阶段会定义函数所用到的变量，加入到[[Scopes]]内部属性当中，它是一个数组，最后一位"),n("code",[t._v("永远都是")]),t._v("Global全局对象，向前依次是祖先->父级。注意，这时只是在第一个阶段，js引擎并没有执行你的操作。(总之所有的脏活累活都要在第一个阶段完成，以保证js引擎执行的最高效率)")])]),t._v(" "),n("li",[n("p",[t._v("执行流进入，读取这个"),n("code",[t._v("执行环境")]),t._v("(函数)的[[Scopes]]属性，并把自身的变量对象加入到前端(unshift)，形成"),n("code",[t._v("作用域链")]),t._v("，这样从头到尾的变量对象，构成了伟大的作用域。")])])]),t._v(" "),n("p",[t._v("需要注意的是，并不是所有的父级作用域的变量都进行存储，而只会存储当前函数所使用到的变量。所以我们进行这样的操作是查看不到父级变量的.")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[t._v("  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fun")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("p")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("dir")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fun")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[n("img",{attrs:{src:a(371),alt:"clipboard.png"}})]),t._v(" "),n("p",[t._v("函数p当中并没用使用到父级函数中的变量b，所以[[Scopes]]只有Global对象(注意，因为Global对象永远存在，并且是引用，所以不会出现这种情况)，\n我认为这也是一种优化手段，可以极大减少内存的使用。")]),t._v(" "),n("p",[t._v("我们换种写法：")]),t._v(" "),n("div",{staticClass:"language-javascript extra-class"},[n("pre",{pre:!0,attrs:{class:"language-javascript"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fun")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("p")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" c "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("f")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("c"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("dir")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("p")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fun")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[n("img",{attrs:{src:a(372),alt:"clipboard.png"}})]),t._v(" "),n("p",[t._v("我们引用了父级作用域中的变量，并打印出来，在编译阶段，编译器把他们加入到了[[Scopes]]中。")]),t._v(" "),n("p",[t._v("此属性，我们不可去访问与修改它，目前只能在控制台中点击查看.")]),t._v(" "),n("h2",{attrs:{id:"functionlocation"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#functionlocation"}},[t._v("#")]),t._v(" [[FunctionLocation]]")]),t._v(" "),n("p",[t._v("这个很容易理解，类似于debugger功能，可以很容易的查找到此函数的代码位置，比如我们以React为例，查看 React.Component函数位置.")]),t._v(" "),n("p",[n("img",{attrs:{src:a(373),alt:"clipboard.png"}})]),t._v(" "),n("p",[t._v("可以看到，key右侧的可点击部分，表示函数在react-dom.min.js第34行，我们点进去查看，晕了，代码被混淆了...")]),t._v(" "),n("p",[n("img",{attrs:{src:a(374),alt:"clipboard.png"}})]),t._v(" "),n("p",[t._v("对于这个属性，我们以后可以大大减少console的使用啦")]),t._v(" "),n("h2",{attrs:{id:"prototype"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#prototype"}},[t._v("#")]),t._v(" [[Prototype]]")]),t._v(" "),n("blockquote",[n("p",[t._v("遵循ECMAScript标准，someObject.[[Prototype]] 符号是用于指向 someObject的原型。从 ECMAScript 6 开始，[[Prototype]]\n可以用Object.getPrototypeOf()和Object.setPrototypeOf()访问器来访问。这个等同于 JavaScript 的非标准但许多浏览器实现的属性\n_"),n("em",[t._v("proto_")]),t._v("。我们经常使用Object.prototype.toString来判断对象类型，toString就是把当前的这个属性转换成字符串返回出去了.")])]),t._v(" "),n("p",[t._v("这个内部属性，表示对象的原型链，类似与[[Scopes]]也是一个数组格式.")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("   var b = {a:1};\n   function o(a){\n     this.b = a;\n   }\n   o.prototype = { c:3; }\n   b.__proto__ = new o(2);\n   console.log(b.a,b.b,b.c); //1 2 3\n")])])]),n("p",[t._v("此时原型链关系是这样的:")]),t._v(" "),n("p",[n("img",{attrs:{src:a(375),alt:"clipboard.png"}})]),t._v(" "),n("p",[t._v("貌似还有很多内部属性，一时想不起来(如果发现，以后会更新)，大家有知道的，可以发表评论。")])])}),[],!1,null,null,null);s.default=e.exports}}]);