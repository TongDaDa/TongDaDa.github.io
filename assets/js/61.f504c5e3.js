(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{513:function(t,a,s){"use strict";s.r(a);var r=s(4),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"粗略概括一下nodejs的组成结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#粗略概括一下nodejs的组成结构"}},[t._v("#")]),t._v(" 粗略概括一下nodeJS的组成结构")]),t._v(" "),s("p",[t._v("c++ -> Libuv -> V8 -> JS")]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"nodejs-模块类型，有几种，他们之间有什么不同？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nodejs-模块类型，有几种，他们之间有什么不同？"}},[t._v("#")]),t._v(" nodejs 模块类型，有几种，他们之间有什么不同？")]),t._v(" "),s("ol",[s("li",[t._v("核心模块，在内建模块上层封装的js层接口。")]),t._v(" "),s("li",[t._v("内建模块，node内部原生的c++模块实现，这些模块调用了 Libuv 接口。")]),t._v(" "),s("li",[t._v("文件模块, 纯JS模块。")])]),t._v(" "),s("p",[t._v("核心模块在启动进程时, 会被引入到内存中，以提高之后的调用效率。")]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"为什么require可以不用声明而直接引用？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么require可以不用声明而直接引用？"}},[t._v("#")]),t._v(" 为什么require可以不用声明而直接引用？")]),t._v(" "),s("p",[t._v("在Node中，每个模块都会被一个立即执行函数(IIFE)包裹着，在Node引入执行它们时，会传入一些参数")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("exports"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" require"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __filename"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" __dirname")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("                                                                         \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("所以，在引入一个"),s("code",[t._v("文件模块")]),t._v("时，会使用一个IIFE初始化这个模块的代码，通过它来带入一些常用的而不用声明的变量。\n这样做还有一个用处是作用域隔离，不会产生命名冲突之类的问题。注意，在global中注入这些变量不能完成相同的\n事情，因为以上每个属性对其调用的模块都有特殊逻辑，定义在global中属于常量，")]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"module-export换成exports可以吗-他们之间有什么不同？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#module-export换成exports可以吗-他们之间有什么不同？"}},[t._v("#")]),t._v(" module.export换成exports可以吗, 他们之间有什么不同？")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" module "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" exports"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("hr"),t._v(" "),s("h2",{attrs:{id:"谈谈你对-duplex-流的理解？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#谈谈你对-duplex-流的理解？"}},[t._v("#")]),t._v(" 谈谈你对 duplex 流的理解？")]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"node-是如何处理https请求，如何指定一个特定的证书？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-是如何处理https请求，如何指定一个特定的证书？"}},[t._v("#")]),t._v(" node 是如何处理https请求，如何指定一个特定的证书？")]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"node单进程运行最大内存限制是多少，新旧内存堆它们是什么？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node单进程运行最大内存限制是多少，新旧内存堆它们是什么？"}},[t._v("#")]),t._v(" node单进程运行最大内存限制是多少，新旧内存堆它们是什么？")]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"假如现在有10个g的文件等着你去处理，在保证性能的同时，请问用node的最佳实践是什么？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#假如现在有10个g的文件等着你去处理，在保证性能的同时，请问用node的最佳实践是什么？"}},[t._v("#")]),t._v(" 假如现在有10个G的文件等着你去处理，在保证性能的同时，请问用node的最佳实践是什么？")]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"drain-事件是在什么时候触发的，出现这种情况时如何应对？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#drain-事件是在什么时候触发的，出现这种情况时如何应对？"}},[t._v("#")]),t._v(" drain 事件是在什么时候触发的，出现这种情况时如何应对？")]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"每隔200ms就需要更新一次本地的json格式文件，向里边添加数据，请问使用那个api操作，他们之间有什么区别？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#每隔200ms就需要更新一次本地的json格式文件，向里边添加数据，请问使用那个api操作，他们之间有什么区别？"}},[t._v("#")]),t._v(" 每隔200ms就需要更新一次本地的json格式文件，向里边添加数据，请问使用那个API操作，他们之间有什么区别？")]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"fs-open是不是有同步的方法-为什么有-没有？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fs-open是不是有同步的方法-为什么有-没有？"}},[t._v("#")]),t._v(" fs.open是不是有同步的方法, 为什么有/没有？")]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"fs-open可以传值指定打开模式，请问这个“0o666-表示什么？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fs-open可以传值指定打开模式，请问这个“0o666-表示什么？"}},[t._v("#")]),t._v(' fs.open可以传值指定打开模式，请问这个“0o666"表示什么？')]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"fs-open底层调用了uv-fs-open，请问是在libuv主线程中执行还是另起一个线程执行？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fs-open底层调用了uv-fs-open，请问是在libuv主线程中执行还是另起一个线程执行？"}},[t._v("#")]),t._v(" fs.open底层调用了uv_fs_open，请问是在libuv主线程中执行还是另起一个线程执行？")]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"说说异步非阻塞式语言的特性，有什么优势和劣势？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#说说异步非阻塞式语言的特性，有什么优势和劣势？"}},[t._v("#")]),t._v(" 说说异步非阻塞式语言的特性，有什么优势和劣势？")]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"了解过其他使用libuv接口的语言吗？他们的性能对比nodejs有什么差异？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#了解过其他使用libuv接口的语言吗？他们的性能对比nodejs有什么差异？"}},[t._v("#")]),t._v(" 了解过其他使用Libuv接口的语言吗？他们的性能对比nodejs有什么差异？")]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"buffer-和-arraybuffer-的区别是什么？如何相互转换？"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#buffer-和-arraybuffer-的区别是什么？如何相互转换？"}},[t._v("#")]),t._v(" Buffer 和 ArrayBuffer 的区别是什么？如何相互转换？")]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"process-nexttick-的作用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#process-nexttick-的作用"}},[t._v("#")]),t._v(" process.nextTick 的作用?")]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"介绍一下你所知道几种-io-模型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#介绍一下你所知道几种-io-模型"}},[t._v("#")]),t._v(" 介绍一下你所知道几种 IO 模型")]),t._v(" "),s("hr")])}),[],!1,null,null,null);a.default=e.exports}}]);